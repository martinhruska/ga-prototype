#! /usr/bin/python3

import graph_types
import graph_run
from graph_automaton import GraphAutomaton


def run(automaton, graph):
    res = None
    while res is None:
        try:
            print("====New try====")
            res = graph_run.automaton_run(automaton, graph)
        except RuntimeError:
            continue


graph0 = graph_types.Graph()
graph0.add_edge('1', 'npt', ('2', '0', '3r'))
graph0.add_edge('2', 'npt', ('3', '1r', '3r'))
graph0.add_edge('3', 'npt', ('0', '2r', '0'))
graph0.add_edge('1r', '-', ())
graph0.add_edge('2r', '-', ())
graph0.add_edge('3r', '-', ())
graph0.add_edge('0', '-', ())

automaton0 = GraphAutomaton()
automaton0.add_transition('q1', 'npt', ('q2', 'q0', 'q3r'), set('x'), set(), set())
automaton0.add_transition('q2', 'npt', ('q3', 'q1r', 'q3r'), set('y'), set(), set())
automaton0.add_transition('q3', 'npt', ('q0', 'q2r', 'q0'), set('z'), set(), set())
automaton0.add_transition('q0', '-', (), set(), set(), set())
automaton0.add_transition('q1r', '-', (), set('x'), set(), set())
automaton0.add_transition('q2r', '-', (), set('y'), set(), set())
automaton0.add_transition('q3r', '-', (), set('z'), set(), set())

run(automaton0, graph0)

graph1 = graph_types.Graph()
graph1.add_edge('1', 'npt', ('2r', '0', '3'))
graph1.add_edge('3', 'npt', ('0', '2', '3r'))
graph1.add_edge('2', 'npt', ('3r', '1r', '3r'))
graph1.add_edge('1r', '-', ())
graph1.add_edge('2r', '-', ())
graph1.add_edge('3r', '-', ())
graph1.add_edge('0', '-', ())

automaton1 = GraphAutomaton()
automaton1.add_transition('q1', 'npt', ('q2', 'q0', 'q3r'), set('x'), set(), set())
automaton1.add_transition('q2', 'npt', ('q3', 'q1r', 'q3r'), set('y'), set(), set())
automaton1.add_transition('q3', 'npt', ('q0', 'q2r', 'q0'), set('z'), set(), set())
automaton1.add_transition('q1', 'npt', ('q2r', 'q0', 'q3'), set('x'), set(), set(['q3+', 'q2-']))
automaton1.add_transition('q3', 'npt', ('q0', 'q2', 'q3r'), set('z'), set(), set(['q2+']))
automaton1.add_transition('q2', 'npt', ('q3r', 'q1r', 'q3r'), set('y'), set(), set(['q3-']))
automaton1.add_transition('q0', '-', (), set(), set(), set())
automaton1.add_transition('q1r', '-', (), set('x'), set(), set())
automaton1.add_transition('q2r', '-', (), set('y'), set(), set())
automaton1.add_transition('q3r', '-', (), set('z'), set(), set())

run(automaton1, graph1)

graph2 = graph_types.Graph()
graph2.add_edge('1', 'npt', ('2', '0', '0'))
graph2.add_edge('2', 'npt', ('3', '1r', '1r'))
graph2.add_edge('3', 'npt', ('4', '2r', '1r'))
graph2.add_edge('4', 'npt', ('5', '3r', '6r'))
graph2.add_edge('5', 'npt', ('6', '4r', '6r'))
graph2.add_edge('6', 'npt', ('0', '5r', '1r'))
graph2.add_edge('1r', '1', ())
graph2.add_edge('2r', '2', ())
graph2.add_edge('3r', '3', ())
graph2.add_edge('4r', '4', ())
graph2.add_edge('5r', '5', ())
graph2.add_edge('6r', '6', ())
graph2.add_edge('0', '0', ())

automaton2 = GraphAutomaton()
automaton2.add_transition('q1', 'npt', ('q2', 'q0', 'q0'), set('a'), set(), set())
automaton2.add_transition('q2', 'npt', ('q3', 'q1r', 'q1r'), set('b'), set(), set())
automaton2.add_transition('q3', 'npt', ('q4', 'q2r', 'q1r'), set('c'), set(), set())
automaton2.add_transition('q4', 'npt', ('q5', 'q3r', 'q6r'), set('d'), set(), set())
automaton2.add_transition('q5', 'npt', ('q6', 'q4r', 'q6r'), set('e'), set(), set())
automaton2.add_transition('q6', 'npt', ('q0', 'q5r', 'q1r'), set('f'), set(), set())
automaton2.add_transition('q1r', '1', (), set('a'), set(), set())
automaton2.add_transition('q2r', '2', (), set('b'), set(), set())
automaton2.add_transition('q3r', '3', (), set('c'), set(), set())
automaton2.add_transition('q4r', '4', (), set('d'), set(), set())
automaton2.add_transition('q5r', '5', (), set('e'), set(), set())
automaton2.add_transition('q6r', '6', (), set('f'), set(), set())
automaton2.add_transition('q0', '0', (), set(), set(), set())

run(automaton2, graph2)

graph3 = graph_types.Graph()
graph3.add_edge('1', 'npt', ('2', '0', '0'))
graph3.add_edge('2', 'npt', ('3r', '1r', '1r'))
graph3.add_edge('3', 'npt', ('4', '2r', '1r'))
graph3.add_edge('4', 'npt', ('5', '3r', '6r'))
graph3.add_edge('5', 'npt', ('6', '4r', '6r'))
graph3.add_edge('6', 'npt', ('0', '5r', '1'))
graph3.add_edge('1r', '1', ())
graph3.add_edge('2r', '2', ())
graph3.add_edge('3r', '3', ())
graph3.add_edge('4r', '4', ())
graph3.add_edge('5r', '5', ())
graph3.add_edge('6r', '6', ())
graph3.add_edge('0', '0', ())

automaton3 = GraphAutomaton()
automaton3.add_transition('q1', 'npt', ('q2', 'q0', 'q0'), set('a'), set(), set())
automaton3.add_transition('q1', 'npt', ('q2', 'q0', 'q0'), set('a'), set(), set(['q1-']))
automaton3.add_transition('q2', 'npt', ('q3', 'q1r', 'q1r'), set('b'), set(), set())
automaton3.add_transition('q2', 'npt', ('q3r', 'q1r', 'q1r'), set('b'), set(), set(['q3-']))
automaton3.add_transition('q3', 'npt', ('q4', 'q2r', 'q1r'), set('c'), set(), set(['q3+']))
automaton3.add_transition('q4', 'npt', ('q5', 'q3r', 'q6r'), set('d'), set(), set())
automaton3.add_transition('q5', 'npt', ('q6', 'q4r', 'q6r'), set('e'), set(), set())
automaton3.add_transition('q6', 'npt', ('q0', 'q5r', 'q1r'), set('f'), set(), set())
automaton3.add_transition('q6', 'npt', ('q0', 'q5r', 'q1'), set('f'), set(), set(['q1+']))
automaton3.add_transition('q1r', '1', (), set('a'), set(), set())
automaton3.add_transition('q2r', '2', (), set('b'), set(), set())
automaton3.add_transition('q3r', '3', (), set('c'), set(), set())
automaton3.add_transition('q4r', '4', (), set('d'), set(), set())
automaton3.add_transition('q5r', '5', (), set('e'), set(), set())
automaton3.add_transition('q6r', '6', (), set('f'), set(), set())
automaton3.add_transition('q0', '0', (), set(), set(), set())

run(automaton3, graph3)

automaton4 = GraphAutomaton()
automaton4.add_transition('q1', 'npt', ('q2', 'q0', 'q0'), set('a'), set(), set())
automaton4.add_transition('q2', 'npt', ('q1', 'q1r', 'q1r'), set('b'), set(), set())
automaton4.add_transition('q1', 'npt', ('q2', 'q2r', 'q1r'), set('a'), set(['a']), set())
automaton4.add_transition('q2', 'npt', ('q1', 'q3r', 'q6r'), set('b'), set(['b']), set())
automaton4.add_transition('q1', 'npt', ('q2', 'q4r', 'q6r'), set('a'), set(['a']), set())
automaton4.add_transition('q2', 'npt', ('q0', 'q5r', 'q1r'), set('b'), set(['b']), set())
automaton4.add_transition('q1r', '1', (), set('a'), set(), set())
automaton4.add_transition('q2r', '2', (), set('b'), set(), set())
automaton4.add_transition('q3r', '3', (), set('a'), set(), set())
automaton4.add_transition('q4r', '4', (), set('b'), set(), set())
automaton4.add_transition('q5r', '5', (), set('a'), set(), set())
automaton4.add_transition('q6r', '6', (), set('b'), set(), set())
automaton4.add_transition('q0', '0', (), set(), set(), set())

run(automaton4, graph2)

automaton5 = GraphAutomaton()
automaton5.add_transition('q1', 'npt', ('q2', 'q0', 'q0'), set('a'), set(), set())
automaton5.add_transition('q1', 'npt', ('q2', 'q0', 'q0'), set('a'), set(), set(['q1-']))
automaton5.add_transition('q2', 'npt', ('q1', 'q1r', 'q1r'), set('b'), set(), set())
automaton5.add_transition('q2', 'npt', ('q3r', 'q1r', 'q1r'), set('b'), set(), set(['q3-']))
automaton5.add_transition('q1', 'npt', ('q2', 'q2r', 'q1r'), set('a'), set(['a']), set())
automaton5.add_transition('q3', 'npt', ('q2', 'q2r', 'q1r'), set('a'), set(['a']), set(['q3+']))
automaton5.add_transition('q2', 'npt', ('q1', 'q3r', 'q6r'), set('b'), set(['b']), set())
automaton5.add_transition('q1', 'npt', ('q2', 'q4r', 'q6r'), set('a'), set(['a']), set())
automaton5.add_transition('q2', 'npt', ('q0', 'q5r', 'q1'), set('b'), set(['b']), set(['q1+']))
automaton4.add_transition('q2', 'npt', ('q0', 'q5r', 'q1r'), set('b'), set(['b']), set())
automaton5.add_transition('q1r', '1', (), set('a'), set(), set())
automaton5.add_transition('q2r', '2', (), set('b'), set(), set())
automaton5.add_transition('q3r', '3', (), set('a'), set(), set())
automaton5.add_transition('q4r', '4', (), set('b'), set(), set())
automaton5.add_transition('q5r', '5', (), set('a'), set(), set())
automaton5.add_transition('q6r', '6', (), set('b'), set(), set())
automaton5.add_transition('q0', '0', (), set(), set(), set())

run(automaton5, graph3)
